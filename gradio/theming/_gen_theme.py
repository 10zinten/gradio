import json
import os
import re

here = os.path.dirname(__file__)
configs = os.path.join(here, "configs")
output_themes_file = os.path.join(os.path.dirname(__file__), "themes.py")

FILE_HEADER = """# Do not edit this file. It is automatically generated by _gen_theme.py
from gradio.theming.utils import Theme

"""

with open(output_themes_file, "w") as f:
    f.write(FILE_HEADER)

PATH_RE = r'^(([a-z]+|[0-9])+\.)+([a-z]+|[0-9]+)$'
for file in os.listdir(configs):
    with open(os.path.join(configs, file)) as f:
        theme = json.load(f)

    with open(output_themes_file, "a") as f:
        f.write(f"class {file.split('.')[0]}(Theme):\n")

        css_dict = {}
        def walk(obj, parents, suffix=None):
            if len(parents) == 0:
                global css_dict
                css_dict = {}
            for k, v in obj.items():
                if isinstance(v, dict):
                    walk(v, parents + [k], suffix)
                else:
                    prop_name = "_".join(parents + [k.replace("-", "_")])
                    if suffix:
                        prop_name += "_" + suffix
                    if isinstance(v, str) and re.match(PATH_RE, v):
                        v = f"var(--{v.replace('.', '-')})"
                    css_dict[prop_name] = v
            if len(parents) == 0:
                for k, v in css_dict.items():
                    f.write(f"    {k} = '{v}'\n")

        walk(theme["light"], [])
        walk(theme["dark"], [], "dark")
        f.write("\n")